# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: crx3.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='crx3.proto',
  package='crx_file',
  syntax='proto2',
  serialized_options=_b('H\003'),
  serialized_pb=_b('\n\ncrx3.proto\x12\x08\x63rx_file\"\x9c\x01\n\rCrxFileHeader\x12\x35\n\x0fsha256_with_rsa\x18\x02 \x03(\x0b\x32\x1c.crx_file.AsymmetricKeyProof\x12\x37\n\x11sha256_with_ecdsa\x18\x03 \x03(\x0b\x32\x1c.crx_file.AsymmetricKeyProof\x12\x1b\n\x12signed_header_data\x18\x90N \x01(\x0c\";\n\x12\x41symmetricKeyProof\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"\x1c\n\nSignedData\x12\x0e\n\x06\x63rx_id\x18\x01 \x01(\x0c\x42\x02H\x03')
)




_CRXFILEHEADER = _descriptor.Descriptor(
  name='CrxFileHeader',
  full_name='crx_file.CrxFileHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sha256_with_rsa', full_name='crx_file.CrxFileHeader.sha256_with_rsa', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sha256_with_ecdsa', full_name='crx_file.CrxFileHeader.sha256_with_ecdsa', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signed_header_data', full_name='crx_file.CrxFileHeader.signed_header_data', index=2,
      number=10000, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=181,
)


_ASYMMETRICKEYPROOF = _descriptor.Descriptor(
  name='AsymmetricKeyProof',
  full_name='crx_file.AsymmetricKeyProof',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_key', full_name='crx_file.AsymmetricKeyProof.public_key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature', full_name='crx_file.AsymmetricKeyProof.signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=242,
)


_SIGNEDDATA = _descriptor.Descriptor(
  name='SignedData',
  full_name='crx_file.SignedData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='crx_id', full_name='crx_file.SignedData.crx_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=272,
)

_CRXFILEHEADER.fields_by_name['sha256_with_rsa'].message_type = _ASYMMETRICKEYPROOF
_CRXFILEHEADER.fields_by_name['sha256_with_ecdsa'].message_type = _ASYMMETRICKEYPROOF
DESCRIPTOR.message_types_by_name['CrxFileHeader'] = _CRXFILEHEADER
DESCRIPTOR.message_types_by_name['AsymmetricKeyProof'] = _ASYMMETRICKEYPROOF
DESCRIPTOR.message_types_by_name['SignedData'] = _SIGNEDDATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CrxFileHeader = _reflection.GeneratedProtocolMessageType('CrxFileHeader', (_message.Message,), dict(
  DESCRIPTOR = _CRXFILEHEADER,
  __module__ = 'crx3_pb2'
  # @@protoc_insertion_point(class_scope:crx_file.CrxFileHeader)
  ))
_sym_db.RegisterMessage(CrxFileHeader)

AsymmetricKeyProof = _reflection.GeneratedProtocolMessageType('AsymmetricKeyProof', (_message.Message,), dict(
  DESCRIPTOR = _ASYMMETRICKEYPROOF,
  __module__ = 'crx3_pb2'
  # @@protoc_insertion_point(class_scope:crx_file.AsymmetricKeyProof)
  ))
_sym_db.RegisterMessage(AsymmetricKeyProof)

SignedData = _reflection.GeneratedProtocolMessageType('SignedData', (_message.Message,), dict(
  DESCRIPTOR = _SIGNEDDATA,
  __module__ = 'crx3_pb2'
  # @@protoc_insertion_point(class_scope:crx_file.SignedData)
  ))
_sym_db.RegisterMessage(SignedData)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
